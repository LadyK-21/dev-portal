.container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  font-family: var(--font-display);
}

.body {
  flex-grow: 1;
  position: relative;
}

.contentWrapper {
  height: 100%;
  left: var(--sidebar-width);
  overflow-y: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.content {
  align-items: flex-start;
  display: flex;
  height: 100%;
  justify-content: center;
  overflow-y: auto;
  padding-left: 24px;
  padding-right: 24px;
  padding-top: 32px;
  position: relative;
}

/*
TODO: a lot of this will be abstracted further when we have access to design
tokens and helper classes.

NOTE: the flex-grow and width properties set on the <main> element
ensure that the element grows to fit the open space. When there are images in
the <main>, it can become too wide. When there is very little content (such as a
heading with only a couple words, the element can become too narrow.
  - flex-grow: 1
  - width: 0
*/
.main {
  flex-grow: 1;
  max-width: 804px;
  padding: 0 24px;
  width: 0;
}

.tempContentStyles {
  composes: hds-typography-body-300 from global;

  & :global {
    & a.__permalink-h {
      display: none;
    }

    & .alert.alert-info {
      background-color: #f2f8ff;
      border: 1px solid #cce3f3;
      border-radius: 6px;
      color: var(--token-color-palette-neutral-600);
      padding: 16px;

      & code {
        background-color: white;
        border: 1px solid #cce3fe;
        border-radius: 5px;
        color: inherit;
      }

      & p {
        &:first-child {
          margin-top: 0;
        }

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }

  & strong {
    font-weight: 500;
  }

  & :not(nav) {
    & ul,
    & ol {
      margin: 24px 0;
      padding-left: 24px;

      & li {
        &:not(:last-child) {
          margin-bottom: 16px;
        }

        & ul,
        & ol {
          margin: 16px 0;
        }
      }
    }
  }

  & img {
    border-radius: 5px;
    margin: 24px auto;
    max-width: 100%;
  }

  /* inline code elements */
  & code {
    background-color: var(--token-color-palette-neutral-50);
    border-radius: 5px;
    border: 1px solid rgba(101, 106, 118, 0.2);
    font-size: 13px;
    font-weight: 400;
    line-height: 16px;
    padding: 2px 4px;
  }

  /* code blocks */
  & pre {
    border-radius: 5px;

    & code {
      background-color: transparent;
      border: none;
      border-radius: 0;
      padding: 0;
    }
  }

  & table {
    border-collapse: collapse;
    border-spacing: 0;
    border: 1px solid #ddd;
    border-right: 0;
    background-color: transparent;
    width: 100%;
    max-width: 100%;
    margin-bottom: 20px;

    & th {
      text-align: left;
    }

    & td,
    & th {
      border-right: 1px solid #ddd;
      padding: 0;
    }

    & > tbody > tr:nth-of-type(odd) {
      background-color: #f9f9f9;
    }

    & > thead > tr > th,
    & > tbody > tr > th,
    & > tfoot > tr > th,
    & > thead > tr > td,
    & > tbody > tr > td,
    & > tfoot > tr > td {
      padding: 8px;
      line-height: 1.42857143;
      vertical-align: top;
      border-top: 1px solid #ddd;
    }

    & > thead > tr > th {
      vertical-align: bottom;
      border-bottom: 2px solid #ddd;
    }

    & > caption + thead > tr:first-child > th,
    & > colgroup + thead > tr:first-child > th,
    & > thead:first-child > tr:first-child > th,
    & > caption + thead > tr:first-child > td,
    & > colgroup + thead > tr:first-child > td,
    & > thead:first-child > tr:first-child > td {
      border-top: 0;
      border-right: 1px solid #ddd;
    }

    & > tbody + tbody {
      border-top: 2px solid #ddd;
    }

    & table {
      background-color: #fff;
    }

    & tr.warning td {
      background: #fcf8e3;
    }
  }
}

.editOnGithubLink {
  margin-top: 64px;
}

.footer {
  margin-top: 360px;
}
